# Generated by Django 3.2.12 on 2023-02-09 08:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import sorl.thumbnail.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('tournaments', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Fight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveSmallIntegerField(null=True)),
                ('rounds', models.PositiveSmallIntegerField(choices=[(0, '0'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10')], default=0)),
                ('fighter_one_points', models.PositiveSmallIntegerField(default=0, null=True)),
                ('fighter_two_points', models.PositiveSmallIntegerField(default=0, null=True)),
                ('resolved', models.BooleanField(default=False, null=True)),
            ],
            options={
                'verbose_name': 'Walka',
                'verbose_name_plural': 'Walki',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveSmallIntegerField(choices=[(0, '0'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10')], default=0)),
                ('color_fighter_one', models.CharField(choices=[('lemonchiffon', 'żółty'), ('lightgreen', 'zielony'), ('powderblue', 'niebieski'), ('coral', 'czerwony'), ('darkorange', 'pomarańczowy'), ('thistle', 'fioletowy'), ('darkblue', 'granatowy'), ('darkslategray', 'czarny'), ('floralwhite', 'biały'), ('peru', 'brązowy'), ('pink', 'różowy'), ('darkgrey', 'szary')], max_length=30, null=True)),
                ('color_fighter_two', models.CharField(choices=[('lemonchiffon', 'żółty'), ('lightgreen', 'zielony'), ('powderblue', 'niebieski'), ('coral', 'czerwony'), ('darkorange', 'pomarańczowy'), ('thistle', 'fioletowy'), ('darkblue', 'granatowy'), ('darkslategray', 'czarny'), ('floralwhite', 'biały'), ('peru', 'brązowy'), ('pink', 'różowy'), ('darkgrey', 'szary')], max_length=30, null=True)),
                ('number_outgoing', models.CharField(choices=[('0', '0'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], default=0, max_length=2, null=True)),
            ],
            options={
                'verbose_name': 'Grupa',
                'verbose_name_plural': 'Grupy',
            },
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('school', models.CharField(max_length=500)),
                ('image', sorl.thumbnail.fields.ImageField(blank=True, null=True, upload_to='tournament_calculating/images/%Y/%m/%d/')),
                ('group_points', models.PositiveSmallIntegerField(default=0, null=True)),
                ('points_average', models.FloatField(default=0, null=True)),
                ('round_average', models.FloatField(default=0, null=True)),
                ('amount_rounds', models.PositiveSmallIntegerField(default=0, null=True)),
                ('tournaments_points', models.PositiveSmallIntegerField(default=0, null=True)),
                ('tournaments_average', models.PositiveSmallIntegerField(default=0, null=True)),
                ('tournaments_wins', models.PositiveSmallIntegerField(default=0, null=True)),
                ('tournaments_losses', models.PositiveSmallIntegerField(default=0, null=True)),
                ('tournaments_doubles', models.PositiveSmallIntegerField(default=0, null=True)),
                ('tournaments_hands', models.PositiveSmallIntegerField(default=0, null=True)),
                ('tournaments_disqualifications', models.PositiveSmallIntegerField(default=0, null=True)),
                ('tournaments_injuries', models.PositiveSmallIntegerField(default=0, null=True)),
                ('tournaments_surrenders', models.PositiveSmallIntegerField(default=0, null=True)),
                ('tournaments_opponent_injuries', models.PositiveSmallIntegerField(default=0, null=True)),
                ('tournaments', models.ManyToManyField(related_name='participants', to='tournaments.Tournament')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Zawodnik',
                'verbose_name_plural': 'Zawodnicy',
            },
        ),
        migrations.CreateModel(
            name='Round',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveSmallIntegerField(null=True)),
                ('points_fighter_one', models.CharField(choices=[('0', '0'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('kontuzja', 'kontuzja'), ('dyskwalifikacja', 'dyskwalifikacja'), ('poddanie', 'poddanie'), ('wycofanie', 'wycofanie'), ('średnia', 'średnia')], max_length=20, null=True)),
                ('points_fighter_two', models.CharField(choices=[('0', '0'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('kontuzja', 'kontuzja'), ('dyskwalifikacja', 'dyskwalifikacja'), ('poddanie', 'poddanie'), ('wycofanie', 'wycofanie'), ('średnia', 'średnia')], max_length=20, null=True)),
                ('fight', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rounds_of_fight', to='tournament_calculating.fight')),
                ('fighter_one', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rounds_of_participant_one', to='tournament_calculating.participant')),
                ('fighter_two', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rounds_of_participant_two', to='tournament_calculating.participant')),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rounds_of_group', to='tournament_calculating.group')),
            ],
            options={
                'verbose_name': 'Runda',
                'verbose_name_plural': 'Rundy',
            },
        ),
        migrations.CreateModel(
            name='ParticipantGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tournament_points', models.PositiveSmallIntegerField(default=0, null=True)),
                ('tournament_average', models.PositiveSmallIntegerField(default=0, null=True)),
                ('tournament_wins', models.PositiveSmallIntegerField(default=0, null=True)),
                ('tournament_losses', models.PositiveSmallIntegerField(default=0, null=True)),
                ('tournament_doubles', models.PositiveSmallIntegerField(default=0, null=True)),
                ('tournament_hands', models.PositiveSmallIntegerField(default=0, null=True)),
                ('tournament_disqualifications', models.PositiveSmallIntegerField(default=0, null=True)),
                ('tournament_injuries', models.PositiveSmallIntegerField(default=0, null=True)),
                ('tournament_surrenders', models.PositiveSmallIntegerField(default=0, null=True)),
                ('tournament_opponent_injuries', models.PositiveSmallIntegerField(default=0, null=True)),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='tournament_calculating.group')),
                ('participant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='tournament_calculating.participant')),
            ],
        ),
        migrations.AddField(
            model_name='group',
            name='participants',
            field=models.ManyToManyField(through='tournament_calculating.ParticipantGroup', to='tournament_calculating.Participant'),
        ),
        migrations.AddField(
            model_name='group',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='tournaments.tournament'),
        ),
        migrations.AddField(
            model_name='fight',
            name='fighter_one',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fighters_one', to='tournament_calculating.participant'),
        ),
        migrations.AddField(
            model_name='fight',
            name='fighter_two',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fighters_two', to='tournament_calculating.participant'),
        ),
        migrations.AddField(
            model_name='fight',
            name='group',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fights', to='tournament_calculating.group'),
        ),
        migrations.AddField(
            model_name='fight',
            name='tournament',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fights', to='tournaments.tournament'),
        ),
    ]
